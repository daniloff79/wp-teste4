<html class="wf-montserrat-n4-active wf-active">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Improving WordPress Shortcode Usability | Paulund</title>

<meta name="robots" content="noodp,noydir">
<meta name="description" content="In this tutorial we are going to talk about WordPress shortcodes and what I think is the missing piece with shortcodes in WordPress. First I’ll start by…">
<meta property="og:url" content="https://paulund.co.uk/improve-shortcodes">
<meta name="twitter:card" content="summary">
<meta name="twitter:site" content="@paulund">

    <style>html{box-sizing:border-box;font-size:16px;font-family:'Open Sans',sans-serif;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%;-webkit-font-smoothing:antialiased}h1,h2,h3,h4,h5,h6{color:#1e1e1e;clear:both;margin-top:0;margin-bottom:1.05rem;font-family:'Open Sans',sans-serif;line-height:1.125}h1,h1.title{font-weight:800;font-size:3rem}h2,h2.title{font-weight:800;font-size:2.75rem}h3,h3.title{font-weight:700;font-size:2.5rem}h4,h4.title{font-weight:800;font-size:2.125rem}h5,h5.title{font-weight:700;font-size:2.125rem}h6,h6.title{font-weight:400;font-size:2.125rem}*+h1,*+h2,*+h3,*+h4,*+h5,*+h6{margin-top:3rem}ul{list-style:disc}ol{list-style:decimal}ul,ol{margin:0 0 1.5em .75em;padding-left:1.5em}ul li,ol li{margin-bottom:.75em}li>ul,li>ol{margin-top:.75em;margin-bottom:0;margin-left:.75em}blockquote{margin:1.5rem;color:#1e1e1e;quotes:'' '';font-style:italic;font-size:27px;font-size:1.5rem;font-family:'Open Sans',sans-serif;line-height:1.125}@media screen and (min-width:768px){blockquote{margin:3rem}}pre{overflow:auto;margin:2em 0;padding:1.5em;max-width:100%;background-color:#1e1e1e;color:#f0f0f0;word-wrap:initial;font-weight:bold;font-family:Courier,'Andale Mono','DejaVu Sans Mono',monospace}
	.highlight{background-color:#fff090;color:#222}.site-header-title{margin:0}.nav-left,.nav-right{overflow:hidden}.columns{flex-wrap:wrap}.site-header .fa-search{line-height:1.75em}.post{margin-bottom:.75em;border-bottom:thin solid #f3f3f3}.post .publish-date{color:#a7a7a7;margin-bottom:2rem}.content-container,.content-container-sidebar{max-width:800px}.content-container h2,.content-container-sidebar h2{margin-top:1rem}.content-container p,.content-container-sidebar p{padding-bottom:1.6rem}.content-container .box,.content-container-sidebar .box{margin-bottom:1rem}.content-container .box .title,.content-container-sidebar .box .title{margin:0}.content-container .box .media-left,.content-container-sidebar .box .media-left{min-width:5rem}.content-container .box .media-left h2,.content-container-sidebar .box .media-left h2{color:#FFF}.content-container-sidebar{max-width:100%}.footer ul{list-style:none}.membership-package{border-radius:0}#search-button{cursor:pointer}#search-overlay{display:none;cursor:pointer;background:rgba(0,0,0,0.7)}#search-overlay .container{position:absolute;top:40%;left:1rem;right:1rem;width:100%;max-width:620px}#search-overlay input[type=submit]{width:100%}.is-overlay{position:fixed;z-index:9999}.is-overlay .label{color:#FFF}.membership-box a{color:#7a7a7a}.membership-box a:hover{color:#616161}.membership-box p{font-size:1rem}#carbonads{text-align:center;overflow:hidden;margin:0 auto}
	.carbon-poweredby,.carbon-text{float:left;width:100%}#edd-purchase-button,.edd-add-to-cart{line-height:1;padding-bottom:.4em;padding-top:.35em;background-color:#00d1b2;color:#fff;-moz-appearance:none;-webkit-appearance:none;-webkit-box-align:center;-ms-flex-align:center;align-items:center;border:1px solid transparent;border-radius:3px;box-shadow:none;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;font-size:1rem;height:2.25em;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start;line-height:1.5;padding-bottom:calc(.375em - 1px);padding-left:calc(.625em - 1px);padding-right:calc(.625em - 1px);padding-top:calc(.375em - 1px);position:relative;vertical-align:top;-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;border-color:#dbdbdb;cursor:pointer;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;padding-left:.75em;padding-right:.75em;text-align:center;white-space:nowrap}fieldset{border:0}
	.edd-input{-moz-appearance:none;-webkit-appearance:none;-webkit-box-align:center;-ms-flex-align:center;align-items:center;border:1px solid transparent;border-radius:3px;box-shadow:none;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;font-size:1rem;height:2.25em;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start;line-height:1.5;padding-bottom:calc(.375em - 1px);padding-left:calc(.625em - 1px);padding-right:calc(.625em - 1px);padding-top:calc(.375em - 1px);position:relative;vertical-align:top;background-color:#fff;border-color:#dbdbdb;color:#363636;box-shadow:inset 0 1px 2px rgba(10,10,10,0.1);max-width:100%;width:100%}@media(max-width:767px){.nav-center{left:0;right:0;top:100%;position:absolute;background:#FFF;flex-direction:column}}.hero{color:#FFF}.hero a,.hero .title,.hero .subtitle,.hero p{color:#FFF}.hero p{margin-bottom:1.5rem}
	.hero,.hero.is-wordpress.is-bold{background-color:#247499;background-image:linear-gradient(141deg,#1a5570 0,#247499 71%,#2984ae 100%)}.hero.is-laravel.is-bold{background-color:#f4645f;background-image:linear-gradient(141deg,#f1362f 0,#f4645f 71%,#f67b77 100%)}.hero.is-vuejs.is-bold,.hero.is-freebies.is-bold,.hero.is-resources.is-bold{background-color:#42b983;background-image:linear-gradient(141deg,#359368 0,#42b983 71%,#53c28f 100%)}.hero.is-php.is-bold{background-color:#8892bf;background-image:linear-gradient(141deg,#6774ad 0,#8892bf 71%,#99a1c8 100%)}.hero.is-html5.is-bold{background-color:#f16528;background-image:linear-gradient(141deg,#d84b0e 0,#f16528 71%,#f37640 100%)}.hero.is-css.is-bold,.hero.is-mysql.is-bold{background-color:#2eaade;background-image:linear-gradient(141deg,#1e8dbb 0,#2eaade 71%,#44b3e1 100%)}.hero.is-jquery.is-bold{background-color:#0769ad;background-image:linear-gradient(141deg,#054b7c 0,#0769ad 71%,#0878c6 100%)}.hero.is-javascript.is-bold{background-color:#fac552;background-image:linear-gradient(141deg,#f9b420 0,#fac552 71%,#fbcd6b 100%)}.hero.is-web-development.is-bold,.hero.is-articles.is-bold{background-color:#ffdd57;background-image:linear-gradient(141deg,#ffd324 0,#ffdd57 71%,#ffe271 100%)}.hero.is-git.is-bold{background-color:#363636;background-image:linear-gradient(141deg,#1d1d1d 0,#363636 71%,#434343 100%)}.fade-enter-active,.fade-leave-active{transition:opacity .5s ease}.fade-enter,.fade-leave-active{opacity:0}pre code{font-size:1.1rem}pre code .tag,pre code .number{background:0;font-size:1.1rem;min-width:0;height:26px;margin:0;padding:0}pre code .token.attr-name{margin-left:.5rem}img{display:block}
	</style><link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Montserrat" media="all"><script id="_carbonads_projs" type="text/javascript" src="//srv.carbonads.net/ads/C6AILKT.json?segment=placement:paulundcouk&amp;callback=_carbonads_go"></script>
</head>

<body class="post-template-default single single-post single-format-standard">

<div class="site">
    

    <div id="main" class="site-main">  
	<section class="section is-small">
            <div class="container content-container">
<h2>How To Improve Shortcodes</h2>
<p>In a previous tutorial we investigated <a href="http://www.paulund.co.uk/add-button-tinymce-shortcodes" title="Add Button To Editor For All Shortcodes" target="_blank">how we can create a button on the TinyMce editor to add our shortcodes</a> into the content area. We will use this same technique to create an area for the user to select which shortcode they want to use, then use the WordPress in-built jQuery UI script to display a dialog box, populated with a form to select the attributes.</p>
<p>From the images below you can see what we are going to create</p>
<p><img src="shortcode-dropdown-590x81.png" alt="shortcode-dropdown" width="590" height="81" class="aligncenter size-large wp-image-10505">
First select a shortcode from the dropdown.</p>
<p><img src="shortcode-form-590x253.png" alt="shortcode-form" width="590" height="253" class="aligncenter size-large wp-image-10508">
Next fill out a form with the shortcode options.</p>
<p><img src="shortcode-content-590x163.png" alt="Shortcode Content" width="590" height="163" class="aligncenter size-large wp-image-10543">
Submit the form the shortcode appears in the content area populated with the required attributes.</p>
<h3>Add Button To TinyMce</h3>
<p>First we need to create a way of adding the dropdown to the TinyMce content editor to display a list of all shortcodes that we want to display a form for.</p>
<p>To add a new button to the <a href="http://www.paulund.co.uk/display-full-tinymce-editor-in-wordpress" title="Display Full TinyMCE Editor In WordPress" target="_blank">TinyMce editor</a> you need to use the WordPress filter of <strong>mce_buttons</strong>, this filter will pass in one parameter which is an array of the existing buttons, to add new buttons you need to simply add new elements to the end of the $buttons array and return the entire array.</p>
<pre class=" language-php"><code class=" language-php"><span class="token function">add_filter</span><span class="token punctuation">(</span> <span class="token string">'mce_buttons'</span><span class="token punctuation">,</span> <span class="token string">'pu_register_buttons'</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">pu_register_buttons</span><span class="token punctuation">(</span> <span class="token variable">$buttons</span> <span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">array_push</span><span class="token punctuation">(</span> <span class="token variable">$buttons</span><span class="token punctuation">,</span> <span class="token string">'separator'</span><span class="token punctuation">,</span> <span class="token string">'puhortcodes'</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token variable">$buttons</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<h3>Include JavaScript File For Form</h3>
<p>Because we are using <a href="http://www.paulund.co.uk/load-jquery-ui-theme-wordpress" title="Load Google jQuery UI Theme CDN In WordPress" target="_blank">jQuery UI</a> to create the form, we need to add a new Javascript file which we will use to add the script that creates the form. To do this we need to use a filter <strong>mce_external_plugins</strong> to which allows us to add additional Javascript files at the point of the TinyMce scripts.</p>
<pre class=" language-php"><code class=" language-php"><span class="token function">add_filter</span><span class="token punctuation">(</span> <span class="token string">'mce_external_plugins'</span><span class="token punctuation">,</span> <span class="token string">'pu_add_buttons'</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">pu_add_buttons</span><span class="token punctuation">(</span> <span class="token variable">$plugin_array</span> <span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token variable">$plugin_array</span><span class="token punctuation">[</span><span class="token string">'pushortcodes'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">plugin_dir_url</span><span class="token punctuation">(</span> <span class="token function">dirname</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token string">'js/shortcode-tinymce-button.js'</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token variable">$plugin_array</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<h3>Create New Filter To Include Certain Shortcodes</h3>
<p><img src="shortcode-dropdown-590x81.png" alt="shortcode-dropdown" width="590" height="81" class="aligncenter size-large wp-image-10505" ></p>
<p>WordPress has two ways that you can extend the functionality of the code, this is either actions or filters.</p>
<p>Actions allow you to add additional code functions to run at a certain time in the code.</p>
<p>Filters allow you to pass in parameters, change the content and return a new value.</p>
<p>Through out the internal code of WordPress there are actions and filters everywhere allowing you to change the functionality of the code, this is what you will use in any plugin development to add new stuff to WordPress. But you don't have to just use the internal WordPress actions and filters you can <strong>define your own</strong> to reuse elsewhere.</p>
<p>In the below code we are going to use our own filter to add new tags to the shortcode dropdown. Notice in the code below the <strong>function apply_filters()</strong>, this tells WordPress to run the functions that have already been added to this filter. This filter will takes one parameter which is an array of shortcode tags we are going to use in the shortcode dropdown. The filter allows us to add additional elements to this shortcode tags array which will use to build up the dropdown.</p>
<pre class=" language-php"><code class=" language-php"><span class="token function">add_action</span><span class="token punctuation">(</span><span class="token string">'admin_footer'</span><span class="token punctuation">,</span> <span class="token string">'pu_get_shortcodes'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">pu_get_shortcodes</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">echo</span> '<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">var</span> shortcodes_button <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'<span class="token punctuation">;</span>

    <span class="token variable">$shortcode_button_tags</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token variable">$shortcode_button_tags</span> <span class="token operator">=</span> <span class="token function">apply_filters</span><span class="token punctuation">(</span><span class="token string">'pu_shortcode_button'</span><span class="token punctuation">,</span> <span class="token variable">$shortcode_button_tags</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$shortcode_button_tags</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$shortcode_button_tags</span> <span class="token keyword">as</span> <span class="token variable">$tag</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token variable">$code</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">echo</span> <span class="token string">"shortcodes_button['{$tag}'] = '{$code}';"</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">echo</span> <span class="token string">'&lt;/script&gt;'</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>For us to add shortcodes to this dropdown we need to add new filters to the <strong>pu_shortcode_button</strong> filter.</p>
<p>Here we are using the filter <strong>pu_shortcode_button</strong> to add a new Facebook shortcode, inside the function all we are doing is adding a new element to the array. The key is going to be the shortcode name, the value is the title we present to the user, then we just return the entire array.</p>
<pre class=" language-php"><code class=" language-php"><span class="token function">add_filter</span><span class="token punctuation">(</span><span class="token string">'pu_shortcode_button'</span><span class="token punctuation">,</span> <span class="token string">'add_facebook_shortcode'</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">add_facebook_shortcode</span><span class="token punctuation">(</span> <span class="token variable">$shortcode_tags</span> <span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token variable">$shortcode_tags</span><span class="token punctuation">[</span><span class="token string">'facebook_like_box'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'Facebook Like Box'</span><span class="token punctuation">;</span>
        
    <span class="token keyword">return</span> <span class="token variable">$shortcode_tags</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<h2>Creating The jQuery UI Form</h2>
<p>To create the form that is going to appear when you select the shortcode we can use the jQueryUI dialog box, then add the HTML to create the form. <a href="http://www.paulund.co.uk/default-scripts-to-add-in-wordpress-development" title="Default Scripts To Use In WordPress Development" target="_blank">JQueryUI comes built in to WordPress with the scripts</a> needed for the dialog box, to use these we just need to run the wp_enqueue_script() function, with the parameter of <strong>jquery-ui-dialog</strong>. </p>
<p>But WordPress doesn't come with the stylesheets for the jQueryUI dialog box so we need to include these styles in the <a href="http://www.paulund.co.uk/how-to-check-if-in-wordpress-admin-area" title="How To Check If In WordPress Admin Area" target="_blank">WordPress admin area</a>. We can use Google CDN to get the default jQueryUI stylesheets by using the wp_enqueue_style() and the URL for the Google CDN.</p>
<pre class=" language-php"><code class=" language-php"><span class="token function">add_action</span><span class="token punctuation">(</span><span class="token string">'admin_enqueue_scripts'</span><span class="token punctuation">,</span> <span class="token string">'add_dialog_box_scripts'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">add_dialog_box_scripts</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">wp_enqueue_script</span><span class="token punctuation">(</span> <span class="token string">'jquery-ui-dialog'</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string">'jquery'</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">wp_enqueue_style</span><span class="token punctuation">(</span> <span class="token string">'jquery-style'</span><span class="token punctuation">,</span> '<span class="token comment" spellcheck="true">//ajax.googleapis.com/ajax/libs/jqueryui/1.10.4/themes/smoothness/jquery-ui.css' );</span>
<span class="token punctuation">}</span></code></pre>
<p>With these scripts included on the page we can now create the dialog box with the form elements populated for the shortcode attributes.</p>
<h3>Add Form To Dialog Box</h3>
<p><img src="shortcode-form-590x253.png" alt="shortcode-form" width="590" height="253" class="aligncenter size-large wp-image-10508"></p>
<p>With creating the form we are going to use another <strong>custom WordPress filter</strong> to add form elements to the dialog box. The below code will be the HTML in the footer of the admin area, this HTML is what we need to create the dialog box that will be displayed when the user selects a shortcode.</p>
<p>As the form elements are going to be added when you select a shortcode this needs to be done with Javascript, therefore we are going to create a JavaScript variable and add all the form elements into this object so we can use this in the Javascript to create the form.</p>
<pre class=" language-php"><code class=" language-php"><span class="token function">add_action</span><span class="token punctuation">(</span><span class="token string">'admin_footer'</span><span class="token punctuation">,</span> <span class="token string">'pu_shortcode_dialog'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">pu_shortcode_dialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">echo</span> '<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>shortcode-dialog<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Shortcode Form<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span></span>
            <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>shortcode-dialog-form<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>'<span class="token punctuation">;</span>

    <span class="token keyword">echo</span> '<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">var</span> shortcodes_form <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'<span class="token punctuation">;</span>

    <span class="token variable">$shortcode_form</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$shortcode_form</span> <span class="token operator">=</span> <span class="token function">apply_filters</span><span class="token punctuation">(</span><span class="token string">'pu_shortcode_form'</span><span class="token punctuation">,</span> <span class="token variable">$shortcode_form</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$shortcode_form</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$shortcode_form</span> <span class="token keyword">as</span> <span class="token variable">$tag</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token variable">$form</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">echo</span> <span class="token string">"shortcodes_form['{$tag}'] = '{$form}';"</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">echo</span> <span class="token string">'&lt;/script&gt;'</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>We now have a JavaScript object variable <strong>shortcodes_form</strong> that is populated with all the form elements for each shortcode. As the shortcode is the key for the object, we use this when a shortcode is selected to get all the form elements, we will then take these form elements and add these to the empty dialog box.</p>
<h2>Shortcode Button JavaScript</h2>
<p>The following code is the Javascript file that we will use to create our shortcode button on the TinyMce editor.</p>
<p>On the click event of the user selecting a shortcode we will construct the form by grabbing the form elements from the <strong>shortcodes_form</strong> variable, emptying the dialog box and re-adding everything for the selected shortcode into the form.</p>
<p>Because we are using the jQueryUI dialog box we can construct the submit button of the form and tell it exactly what we want to do once the form is submitted. Using the jQuery function serializeArray() it will get an array of all the fields on the shortcode form, then all we have to do is loop through this array and create the attributes for the shortcode, once the shortcode is constructed you can output this content into the TinyMce editor.</p>
<pre class=" language-javascript"><code class=" language-javascript"><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    tinymce<span class="token punctuation">.</span>PluginManager<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">'pushortcodes'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span> editor <span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">var</span> shortcodeValues <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        jQuery<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span>shortcodes_button<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            shortcodeValues<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>text<span class="token punctuation">:</span> shortcodes_button<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span>i<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        editor<span class="token punctuation">.</span><span class="token function">addButton</span><span class="token punctuation">(</span><span class="token string">'pushortcodes'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
            type<span class="token punctuation">:</span> <span class="token string">'listbox'</span><span class="token punctuation">,</span>
            text<span class="token punctuation">:</span> <span class="token string">'Shortcodes'</span><span class="token punctuation">,</span>
            onselect<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">var</span> v <span class="token operator">=</span> e<span class="token punctuation">.</span>control<span class="token punctuation">.</span>_value<span class="token punctuation">;</span>

                <span class="token keyword">var</span> content <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>
                <span class="token keyword">var</span> dialogForm <span class="token operator">=</span> <span class="token string">'&lt;table&gt;'</span><span class="token punctuation">;</span>

                <span class="token keyword">if</span><span class="token punctuation">(</span>shortcodes_form<span class="token punctuation">[</span>v<span class="token punctuation">]</span> <span class="token operator">!=</span> undefined<span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    dialogForm <span class="token operator">+</span><span class="token operator">=</span> shortcodes_form<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token punctuation">;</span>

                    <span class="token keyword">if</span><span class="token punctuation">(</span>dialogForm <span class="token operator">!=</span> <span class="token string">'&lt;table&gt;'</span><span class="token punctuation">)</span>
                    <span class="token punctuation">{</span>
                        dialogForm <span class="token operator">+</span><span class="token operator">=</span> <span class="token string">'&lt;/table&gt;'</span><span class="token punctuation">;</span>
                        <span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token string">'.shortcode-dialog-form'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token string">'.shortcode-dialog-form'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>dialogForm<span class="token punctuation">)</span><span class="token punctuation">;</span>

                        <span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token string">"#shortcode-dialog"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">dialog</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                            width<span class="token punctuation">:</span> <span class="token number">700</span><span class="token punctuation">,</span>
                            resizable<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
                            buttons<span class="token punctuation">:</span> <span class="token punctuation">{</span>
                                <span class="token string">"Add Shortcode"</span><span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                                    <span class="token keyword">var</span> formArray <span class="token operator">=</span> <span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token string">'.shortcode-dialog-form'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">serializeArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                                    <span class="token keyword">if</span><span class="token punctuation">(</span>formArray<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
                                    <span class="token punctuation">{</span>
                                        content <span class="token operator">=</span> <span class="token string">'['</span> <span class="token operator">+</span> v <span class="token operator">+</span> <span class="token string">' '</span><span class="token punctuation">;</span>
                                        <span class="token function">jQuery</span><span class="token punctuation">(</span>formArray<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">{</span>
                                            content <span class="token operator">+</span><span class="token operator">=</span> <span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">'="'</span><span class="token operator">+</span> <span class="token function">jQuery</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value <span class="token operator">+</span><span class="token string">'" '</span><span class="token punctuation">;</span>
                                        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                                        content <span class="token operator">+</span><span class="token operator">=</span> <span class="token string">'][/'</span><span class="token operator">+</span>v<span class="token operator">+</span><span class="token string">']'</span><span class="token punctuation">;</span>
                                    <span class="token punctuation">}</span>

                                    tinyMCE<span class="token punctuation">.</span>activeEditor<span class="token punctuation">.</span>selection<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span> content <span class="token punctuation">)</span><span class="token punctuation">;</span>
                                    <span class="token function">jQuery</span><span class="token punctuation">(</span> <span class="token keyword">this</span> <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">dialog</span><span class="token punctuation">(</span> <span class="token string">"close"</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
                                <span class="token punctuation">}</span>
                            <span class="token punctuation">}</span>
                        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    tinyMCE<span class="token punctuation">.</span>activeEditor<span class="token punctuation">.</span>selection<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span> <span class="token string">'['</span> <span class="token operator">+</span> v <span class="token operator">+</span> <span class="token string">'][/'</span> <span class="token operator">+</span> v <span class="token operator">+</span> <span class="token string">']'</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            values<span class="token punctuation">:</span> shortcodeValues
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<p>These are all the files we need to create the shortcode form button plugin, but how would you use this to improve the usability of your shortcodes.</p>
<h2>Using Filters To Add Shortcode</h2>
<p>At the start of this article you saw how you can easily create new filters to use to add extra content to an array, the benefit of using filters for this is so each of our shortcodes can add a new function to add to the array.</p>
<p>The first filter we are going to use is the <strong>pu_shortcode_button</strong> filter that will add content to the shortcode dropdown. This takes one parameter which is the array of shortcodes and will return this same array with the new content added to it. This is the same filter you will use on all your shortcodes, to add them to this dropdown to select the shortcode, as this is an array the key value pairing is important, the key of the array should be the same tag as the shortcode, the value is the text that is going to be displayed on the shortcode dropdown.</p>
<pre class=" language-php"><code class=" language-php"><span class="token function">add_filter</span><span class="token punctuation">(</span><span class="token string">'pu_shortcode_button'</span><span class="token punctuation">,</span> <span class="token string">'pu_add_facebook_shortcode'</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">pu_add_facebook_shortcode</span><span class="token punctuation">(</span> <span class="token variable">$shortcode_tags</span> <span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token variable">$shortcode_tags</span><span class="token punctuation">[</span><span class="token string">'facebook_like_box'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'Facebook Like Box'</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token variable">$shortcode_tags</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>The next filter we need to use is the filter that will create the array of form elements inside the dialog box. The filter we need to use is <strong>pu_shortcode_form</strong>, which again takes one parameter and will return that same parameter with the content of the form inside.</p>
<p>Again the key value pairing of this array is important as it helps define what content to get for each shortcode, the key is the tag of the shortcode and the value is the entire form elements to use for this shortcode.</p>
<pre class=" language-php"><code class=" language-php"><span class="token function">add_filter</span><span class="token punctuation">(</span><span class="token string">'pu_shortcode_form'</span><span class="token punctuation">,</span> <span class="token string">'pu_add_facebook_form'</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">pu_add_facebook_form</span><span class="token punctuation">(</span> <span class="token variable">$shortcode_tags</span> <span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token variable">$shortcode_tags</span><span class="token punctuation">[</span><span class="token string">'facebook_like_box'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">apply_filters</span><span class="token punctuation">(</span><span class="token string">'pu_shortcode_form_add_text'</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">'page_name'</span><span class="token punctuation">,</span> <span class="token string">'Page Name'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$shortcode_tags</span><span class="token punctuation">[</span><span class="token string">'facebook_like_box'</span><span class="token punctuation">]</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token function">apply_filters</span><span class="token punctuation">(</span><span class="token string">'pu_shortcode_form_add_text'</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">'width'</span><span class="token punctuation">,</span> <span class="token string">'Width'</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$shortcode_tags</span><span class="token punctuation">[</span><span class="token string">'facebook_like_box'</span><span class="token punctuation">]</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token function">apply_filters</span><span class="token punctuation">(</span><span class="token string">'pu_shortcode_form_add_checkbox'</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">'show_faces'</span><span class="token punctuation">,</span> <span class="token string">'Show Faces'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$shortcode_tags</span><span class="token punctuation">[</span><span class="token string">'facebook_like_box'</span><span class="token punctuation">]</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token function">apply_filters</span><span class="token punctuation">(</span><span class="token string">'pu_shortcode_form_add_checkbox'</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">'show_stream'</span><span class="token punctuation">,</span> <span class="token string">'Show Stream'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$shortcode_tags</span><span class="token punctuation">[</span><span class="token string">'facebook_like_box'</span><span class="token punctuation">]</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token function">apply_filters</span><span class="token punctuation">(</span><span class="token string">'pu_shortcode_form_add_checkbox'</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">'show_header'</span><span class="token punctuation">,</span> <span class="token string">'Show Header'</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$shortcode_tags</span><span class="token punctuation">[</span><span class="token string">'facebook_like_box'</span><span class="token punctuation">]</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token function">apply_filters</span><span class="token punctuation">(</span><span class="token string">'pu_shortcode_form_add_checkbox'</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">'show_border'</span><span class="token punctuation">,</span> <span class="token string">'Show Border'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$shortcode_tags</span><span class="token punctuation">[</span><span class="token string">'facebook_like_box'</span><span class="token punctuation">]</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token function">apply_filters</span><span class="token punctuation">(</span><span class="token string">'pu_shortcode_form_add_select'</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">'color_scheme'</span><span class="token punctuation">,</span> <span class="token string">'Color Scheme'</span><span class="token punctuation">,</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string">'light'</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">'Light'</span><span class="token punctuation">,</span> <span class="token string">'dark'</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">'Dark'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token variable">$shortcode_tags</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>As you can see from this example I am using custom filters again to get the content of each of the form elements, the reason we do this is for a few good reasons:</p>
<ul>
<li>We will always get a consist output from these functions, so the form element will always come in the same layout.</li>
<li>They can be accessed from anywhere in the code, if shortcodes are in themes or plugins you can still access these filters.</li>
<li>It allows other developers to change the output of these filters.</li>
</ul>
<h2>Creating Textbox Form Element Filter</h2>
<p>The following code will show the default behaviour of the text element filter, this takes 4 parameter in all and we will use these to define the attributes of the form element.</p>
<p>The return of this filter will be used to add the element to the form, so we are going to return a table row with simply a input type of text.</p>
<pre class=" language-php"><code class=" language-php"><span class="token function">add_filter</span><span class="token punctuation">(</span><span class="token string">'pu_shortcode_form_add_text'</span><span class="token punctuation">,</span> <span class="token string">'pu_add_text_form_element'</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">pu_add_text_form_element</span><span class="token punctuation">(</span> <span class="token variable">$content</span><span class="token punctuation">,</span> <span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token variable">$title</span><span class="token punctuation">,</span> <span class="token variable">$value</span> <span class="token operator">=</span> <span class="token string">''</span> <span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">sprintf</span><span class="token punctuation">(</span><span class="token string">'&lt;tr&gt;&lt;td&gt;%s&lt;/td&gt;&lt;td&gt;&lt;input type="text" id="%s" name="%s" value="%s" /&gt;&lt;/td&gt;&lt;/tr&gt;'</span><span class="token punctuation">,</span>
        <span class="token variable">$title</span><span class="token punctuation">,</span>
        <span class="token variable">$name</span><span class="token punctuation">,</span>
        <span class="token variable">$name</span><span class="token punctuation">,</span>
        <span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>Then we can continue this and create the filter for the other form elements.</p>
<h2>Download Shortcode Menu Plugin</h2>
<p>You would of noticed that I haven't included all the code in this tutorial, this is because I have made this plugin available as a premium plugin which I am selling on Coveloping. If you like the idea of this plugin all the code above is enough for you to recreate the plugin but you don't get the full benefit of the plugin.</p>
<p>The added features of the plugin include a settings page for the content author to edit the attributes and shortcodes that appear in the menu.</p>
<p>This plugin was built with the intention to help shortcode developers create a better, usable solution to their shortcodes, while at the same time making it easy for content authors to customise their own use of shortcodes. Allowing the users to easily use these shortcodes on their WordPress sites to enhance the content of the site.</p>
<p><iframe width="770" height="420" src="//www.youtube.com/embed/wK-t1qE1tis" frameborder="0" allowfullscreen=""></iframe></p>
<p>This is a premium plugin which can help improve your already existing shortcodes, you can download this plugin from the Coveloping store for $16.</p>
<p>For Paulund readers you can get this plugin with a 50% discount by using the following discount code <strong>paulundshortcodemenu</strong>.</p>
<p><a href="http://coveloping.com/store/shortcode-menu" target="_blank">Shortcode Menu Plugin</a></p>
        </div>
    </section>


    </div>
</div> <!-- /.site -->


</body>
</html>
