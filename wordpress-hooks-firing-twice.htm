<!DOCTYPE html>
<html lang="en-US">
<head>
<link rel="stylesheet" href="//fonts.googleapis.com/css?family=Roboto%3A300%2C400&subset=latin%2Clatin-ext"/>
<meta charset="UTF-8"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0"/><title>Why Are These WordPress Hooks Firing Twice? | Tom McFarlin</title>
<style>
*{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,font,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td{border:0;font-family:inherit;font-size:100%;font-style:inherit;font-weight:inherit;margin:0;outline:0;padding:0;vertical-align:baseline}html{font-size:62.5%;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%}body{margin:0;color:#6b747a;font:18px/1.6 "Helvetica Neue",Helvetica,sans-serif;background:#f0f3f4}article,aside,details,figcaption,figure,footer,header,nav,section{display:block}::selection{background:#fff8ab;color:#666}::-moz-selection{background:#fff8ab;color:#666}code{background:#f7f7f7;padding:20px;display:block;border-radius:3px}img{border-style:none}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:before,blockquote:after,q:before,q:after{content:'';content:none}:focus{outline:0}ins{text-decoration:none}del{text-decoration:line-through}table{border-collapse:collapse;border-spacing:0}a{color:#687a8a;text-decoration:none;-webkit-transition:.05s ease-in;transition:.05s ease-in}a:hover{color:#4e5b67;text-decoration:none;outline:0;-webkit-transition:.05s ease-in;transition:.05s ease-in}.post-content a{color:#55bee6}.post-content a:hover{color:#6b747a;border-bottom:dotted 1px #e6e6e6}.clearfix:before,.clearfix:after{content:"";display:table}.clearfix:after{clear:both}.clearfix{zoom:1}input,textarea,select{font:100% arial,sans-serif;vertical-align:middle;color:#000}form,fieldset{margin:0;padding:0;border-style:none}p{margin-bottom:1.6em}#content table{border:dotted 1px #e7e7e7;padding:1% 3%}#content table td,#content table th{padding:10px}#content table td{border-bottom:solid 1px #f7f7f7}#content table tr:last-child td{border-bottom:none}#content table tr.odd{background:#f7f7f7}.highlight{background:#fcf8a5;color:#4d5458;width:auto;display:inline;padding:3px 5px}h1,h2,h3,h4,h5,h6{margin:0 0 4% 0;font-family:"Roboto","Helvetica Neue",Helvetica,sans-serif;font-weight:normal;font-weight:300;line-height:1.2;color:#666e75}
</style>
<link rel="canonical" href="https://tommcfarlin.com/wordpress-hooks-firing-twice/"/>
</head>
<body>
<div class="post-content"><p>The hook system that’s built into WordPress is great and really powerful once you fully understand now only how the default actions and filters work, but how you can leverage them in your own themes and plugins to have others work for you.</p><p>But there’s a problem that comes with this: Other developers can often abuse them. Perhaps they will name a hook like one that already exists, or perhaps they’ll trigger a hook outside of the normal WordPress lifecycle.</p><p>When you’re working on building a plugin that’s adhering to the best practices of using a predefined hook and another plugin ends up breaking the usual flow of control, it can be extremely frustrating.</p><p>You – or at least I – can literally spend hours trying to isolate and trace down the source of the problem.</p><p>Frustrating, right?</p><p>Anyway, I’m not in the business of “calling other people out” or identifying problematic plugins on this site (though I don’t mind to discussing one on one), so this post is not about a plugin that’s doing things in a way that I don’t recommend.</p><p>Instead, it’s about finding ways to&nbsp;find a solution when you’re faced with a similar problem.</p><p><span id="more-33964"></span></p><h2>The WordPress Hooks Fire Twice (or More!)</h2><p>So imagine this: You’re working on a plugin that’s going to add a new button to the TinyMCE editor in WordPress – maybe you’re doing to be adding one to the toolbar near the existing “kitchen sink” or maybe you’re going to be adding a button above the editor next to the “Add Media” button.</p><p>In both cases, WordPress hooks exist for doing just that:</p><ul><li><a href="https://codex.wordpress.org/Plugin_API/Filter_Reference/mce_buttons,_mce_buttons_2,_mce_buttons_3,_mce_buttons_4">mce_buttons</a></li><li><a href="https://codex.wordpress.org/Plugin_API/Filter_Reference/mce_external_plugins">mce_external_plugins</a></li><li><a href="https://developer.wordpress.org/reference/functions/media_buttons/">media_buttons</a></li></ul><p>Let’s say, for purposes of this example, that we’re going to be using <code>mce_buttons</code> to add a button next to the “Add Media” button just above the post editor. When running the plugin in isolation, all works fine.</p><p><script data-pagespeed-no-defer="">(function(){var g=this;function h(b,d){var a=b.split("."),c=g;a[0]in c||!c.execScript||c.execScript("var "+a[0]);for(var e;a.length&&(e=a.shift());)a.length||void 0===d?c[e]?c=c[e]:c=c[e]={}:c[e]=d};function l(b){var d=b.length;if(0<d){for(var a=Array(d),c=0;c<d;c++)a[c]=b[c];return a}return[]};function m(b){var d=window;if(d.addEventListener)d.addEventListener("load",b,!1);else if(d.attachEvent)d.attachEvent("onload",b);else{var a=d.onload;d.onload=function(){b.call(this);a&&a.call(this)}}};var n;function p(b,d,a,c,e){this.h=b;this.j=d;this.l=a;this.f=e;this.g={height:window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight,width:window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth};this.i=c;this.b={};this.a=[];this.c={}}function q(b,d){var a,c,e=d.getAttribute("data-pagespeed-url-hash");if(a=e&&!(e in b.c))if(0>=d.offsetWidth&&0>=d.offsetHeight)a=!1;else{c=d.getBoundingClientRect();var f=document.body;a=c.top+("pageYOffset"in window?window.pageYOffset:(document.documentElement||f.parentNode||f).scrollTop);c=c.left+("pageXOffset"in window?window.pageXOffset:(document.documentElement||f.parentNode||f).scrollLeft);f=a.toString()+","+c;b.b.hasOwnProperty(f)?a=!1:(b.b[f]=!0,a=a<=b.g.height&&c<=b.g.width)}a&&(b.a.push(e),b.c[e]=!0)}p.prototype.checkImageForCriticality=function(b){b.getBoundingClientRect&&q(this,b)};h("pagespeed.CriticalImages.checkImageForCriticality",function(b){n.checkImageForCriticality(b)});h("pagespeed.CriticalImages.checkCriticalImages",function(){r(n)});function r(b){b.b={};for(var d=["IMG","INPUT"],a=[],c=0;c<d.length;++c)a=a.concat(l(document.getElementsByTagName(d[c])));if(0!=a.length&&a[0].getBoundingClientRect){for(c=0;d=a[c];++c)q(b,d);a="oh="+b.l;b.f&&(a+="&n="+b.f);if(d=0!=b.a.length)for(a+="&ci="+encodeURIComponent(b.a[0]),c=1;c<b.a.length;++c){var e=","+encodeURIComponent(b.a[c]);131072>=a.length+e.length&&(a+=e)}b.i&&(e="&rd="+encodeURIComponent(JSON.stringify(t())),131072>=a.length+e.length&&(a+=e),d=!0);u=a;if(d){c=b.h;b=b.j;var f;if(window.XMLHttpRequest)f=new XMLHttpRequest;else if(window.ActiveXObject)try{f=new ActiveXObject("Msxml2.XMLHTTP")}catch(k){try{f=new ActiveXObject("Microsoft.XMLHTTP")}catch(v){}}f&&(f.open("POST",c+(-1==c.indexOf("?")?"?":"&")+"url="+encodeURIComponent(b)),f.setRequestHeader("Content-Type","application/x-www-form-urlencoded"),f.send(a))}}}function t(){var b={},d=document.getElementsByTagName("IMG");if(0==d.length)return{};var a=d[0];if(!("naturalWidth"in a&&"naturalHeight"in a))return{};for(var c=0;a=d[c];++c){var e=a.getAttribute("data-pagespeed-url-hash");e&&(!(e in b)&&0<a.width&&0<a.height&&0<a.naturalWidth&&0<a.naturalHeight||e in b&&a.width>=b[e].o&&a.height>=b[e].m)&&(b[e]={rw:a.width,rh:a.height,ow:a.naturalWidth,oh:a.naturalHeight})}return b}var u="";h("pagespeed.CriticalImages.getBeaconData",function(){return u});h("pagespeed.CriticalImages.Run",function(b,d,a,c,e,f){var k=new p(b,d,a,e,f);n=k;c&&m(function(){window.setTimeout(function(){r(k)},0)})});})();pagespeed.CriticalImages.Run('/ngx_pagespeed_beacon','https://tommcfarlin.com/wordpress-hooks-firing-twice/','ew73DRiGhC',true,false,'aVdj9Wi1uzQ');</script><img class="aligncenter size-large wp-image-33965" src="https://tommcfarlin.com/wp-content/uploads/2015/07/690x548xmce_buttons-1024x813.png.pagespeed.ic.bir5b-lzcI.webp" alt="mce_buttons" width="690" height="548" srcset="https://tommcfarlin.com/wp-content/uploads/2015/07/mce_buttons-1024x813.png 1024w, https://tommcfarlin.com/wp-content/uploads/2015/07/mce_buttons-300x238.png 300w, https://tommcfarlin.com/wp-content/uploads/2015/07/mce_buttons.png 1417w" sizes="(max-width: 690px) 100vw, 690px" data-pagespeed-url-hash="3541565283" onload="pagespeed.CriticalImages.checkImageForCriticality(this);"></p><p>Great – no big deal, right?</p><p>But then you end up deploying the code to Staging, and suddenly, your plugin&nbsp;<em>looks</em> like it’s there – because the button appears – but when you click it, maybe nothing happens. Or maybe multiple things happen all at once.</p><p>When this happens, there’s some different things that could be the problem, but one of&nbsp;the best things that you can do is begin to deactivate plugins and then start re-activating them one-by-one until you find the one that’s causing the problem.</p><p>In a case like the one that’s being outlined in this post, you’re likely going to find that there’s a plugin that’s triggering a hook – such as <code>mce_buttons</code> – outside of normal WordPress page lifecycle.</p><p>And while this may work great for&nbsp;<em>that</em> plugin, it’s also going to completely mess with anything else that’s using that hook because it’s going to fire every single event handler that’s registered with it meaning that your plugin is probably going to be triggered more than once and/or out of order, and then it’s not going to work correctly at all.</p><p style="padding-left: 30px;">If you’re a developer, do not hijack WordPress’ default hooks. Name your own and then use <code>do_action</code> to fire them when needed.</p><p>Anyway, so how do you go about fixing this? Depending on your implementation and the offending plugin, you’re likely going to find that your solution is going to vary. But if you’re working with the hook that we’re discussing above, then this is how I’ve opted to solve it.</p><h3>Solving The Problem</h3><p><strong>Note:</strong>&nbsp;I’m not sure if this is the correct way to handle, so if it’s not, please leave a comment outlining a better way to go about doing this.</p><p>The plugin that I’m building works in the following way:</p><ol><li>Display a new button in the editor above the normal toolbar next to the “Add Media” button</li><li>When the button is clicked, display a modal (that accepts input from the user)</li><li>Take the input from the modal and initiate an Ajax request</li><li>Handle the response from the Ajax request and then enter a result into the post editor</li></ol><p>The problem is that if another plugin is hooked into the <code>mce_buttons</code> action, then the plugin will be called more than once and the second (or third, fourth, etc.) instance of the dialog is what the user is going to see.</p><p>And the problem is that all of the event handlers defined by JavaScript are registered with the first instance which is hidden behind the other instances.</p><p>Still with me?</p><p>So to make sure that only a single instance of the dialog is displayed, I introduce a counter variable into the JavaScript, and I increment it when the dialog is displayed.</p><p>Next, if the event is called again – by an offending plugin – but the counter has already been incremented, then&nbsp;my plugin doesn’t execute any more.</p><p><a href="https://gist.github.com/tommcfarlin/2dc7ed7a7624efdabfb8#file-14-handling-multiple-instances-js">See the following code</a>:</p> <script src="https://gist.github.com/2dc7ed7a7624efdabfb8.js?file=14-handling-multiple-instances.js" defer=""></script> <p>Again, this works will within the context of&nbsp;<em>this</em> plugin, though I don’t know if it’s a correct way of doing so (and I’m interested in your feedback).</p><p>The biggest takeaway from this, in my opinion, is that we need to be careful what we name our custom actions, and we need to make sure that we’re not carelessly triggering other actions that are already built into WordPress as it can introduce a significant level of side effects.</p><p>This is frustrating for other developers and users, and it makes your plugin or project look careless – it monopolizes the WordPress experience.</p><h2>A Note About Development and Staging</h2><p>One thing that I didn’t mention in the actual article itself, but that’s helpful nonetheless, is that your Development environment should mirror Staging and vice versa.</p><p>This means that if there are things on Staging that are not on your local machine, then you need to make sure to pull them down and set them up so that you have a 1:1 configuration. This will allow you to catch problems before they hit staging and save some development time.</p><p>Sure, it’s time-consuming on the front-end of the project, but it saves a lot of work towards the middle of the project when you’re cycling through the various test cases. So in addition to everything that’s outlined above, make sure that you have this setup locally and on Staging, as well.</p><div class="sharedaddy sd-sharing-enabled"><div class="robots-nocontent sd-block sd-social sd-social-icon-text sd-sharing"><div class="sd-content"><ul><li class="share-twitter"><a rel="nofollow" data-shared="sharing-twitter-33964" class="share-twitter sd-button share-icon" href="https://tommcfarlin.com/wordpress-hooks-firing-twice/?share=twitter&amp;nb=1" target="_blank" title="Click to share on Twitter"><span>Twitter</span></a></li><li class="share-google-plus-1"><a rel="nofollow" data-shared="sharing-google-33964" class="share-google-plus-1 sd-button share-icon" href="https://tommcfarlin.com/wordpress-hooks-firing-twice/?share=google-plus-1&amp;nb=1" target="_blank" title="Click to share on Google+"><span>Google</span></a></li><li class="share-pocket"><a rel="nofollow" data-shared="" class="share-pocket sd-button share-icon" href="https://tommcfarlin.com/wordpress-hooks-firing-twice/?share=pocket&amp;nb=1" target="_blank" title="Click to share on Pocket"><span>Pocket</span></a></li><li class="share-mwp"><a rel="nofollow" data-shared="sharing-mwp-33964" class="share-mwp sd-button share-icon" href="https://tommcfarlin.com/wordpress-hooks-firing-twice/?share=mwp&amp;nb=1" target="_blank" title="Share on ManageWP.org"><span>ManageWP.org</span></a></li><li class="share-email share-service-visible"><a rel="nofollow" data-shared="" class="share-email sd-button share-icon" href="https://tommcfarlin.com/wordpress-hooks-firing-twice/?share=email&amp;nb=1" target="_blank" title="Click to email this to a friend"><span>Email</span></a></li><li class="share-end"></li></ul></div></div></div><div class="pagelink"></div></div>
</body>
</html>